<?php

namespace DemandeBundle\Repository;

/**
 * DemandeRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class DemandeRepository extends \Doctrine\ORM\EntityRepository
{

    public function countUnreadCol(){
        return $this->createQueryBuilder('d')
            ->select('COUNT(d)')
            ->where('d.readDemande = false')
            ->getQuery()
            ->getSingleScalarResult();
    }

    public function allDemandes(){
        return $this->createQueryBuilder('d')
            ->select('COUNT(d)')
            ->getQuery()
            ->getSingleScalarResult();
    }


    public function countDemandeParMois($date){
        return $this->createQueryBuilder('d')
            ->select('COUNT(d)')
            ->where( "DATE_FORMAT(d.date_emission, '%Y-%m') = :date" )
            ->setParameter('date',  $date )
            ->getQuery()
            ->getSingleScalarResult();
    }




    public function clotureAdmin(){
        return $this->createQueryBuilder('d')
            ->select('COUNT(d)')
            ->where('d.etat = ?1')
            ->setParameter(1, 'Cloture')
            ->getQuery()
            ->getSingleScalarResult();
    }


    public function cloture($id){
        return $this->createQueryBuilder('d')
            ->select('COUNT(d)')
            ->where('d.etat = ?1')
            ->setParameter(1, 'Cloture')
            ->where('d.id_client = :id')
            ->getQuery()
            ->getSingleScalarResult();
    }

    public function clotureLivreur($id){
        return $this->createQueryBuilder('d')
            ->select('COUNT(d)')
            ->where('d.etat = ?1')
            ->setParameter(1, 'Cloture')
            ->where('d.id_livreur = :id')
            ->getQuery()
            ->getSingleScalarResult();
    }



    public function valideAdmin(){
        return $this->createQueryBuilder('d')
            ->select('COUNT(d)')
            ->where('d.etat = ?1')
            ->setParameter(1, 'Valide')
            ->getQuery()
            ->getSingleScalarResult();
    }


    public function valide($id){
        return $this->createQueryBuilder('d')
            ->select('COUNT(d)')
            ->where('d.etat = ?1')
            ->setParameter(1, 'Valide')
            ->where('d.id_client = :id')
            ->getQuery()
            ->getSingleScalarResult();
    }

    public function valideLivreur($id){
        return $this->createQueryBuilder('d')
            ->select('COUNT(d)')
            ->where('d.etat = ?1')
            ->setParameter(1, 'Valide')
            ->where('d.id_livreur = :id')
            ->getQuery()
            ->getSingleScalarResult();
    }



    public function enCoursAdmin(){
        return $this->createQueryBuilder('d')
            ->select('COUNT(d)')
            ->where('d.etat = ?1')
            ->setParameter(1, 'Encours')
            ->getQuery()
            ->getSingleScalarResult();
    }

    public function enCours($id){
        return $this->createQueryBuilder('d')
            ->select('COUNT(d)')
            ->where('d.etat = ?1')
            ->setParameter(1, 'Encours')
            ->where('d.id_client = :id')
            ->getQuery()
            ->getSingleScalarResult();
    }


    public function enCoursLivreur($id){
        return $this->createQueryBuilder('d')
            ->select('COUNT(d)')
            ->where('d.etat = ?1')
            ->setParameter(1, 'Encours')
            ->where('d.id_livreur = :id')
            ->getQuery()
            ->getSingleScalarResult();
    }


    public function enTraitementAdmin(){
        return $this->createQueryBuilder('d')
            ->select('COUNT(d)')
            ->where('d.etat = ?1')
            ->setParameter(1, 'EnTraitement')
            ->getQuery()
            ->getSingleScalarResult();


    }

    public function enTraitement($id){
        return $this->createQueryBuilder('d')
            ->select('COUNT(d)')
            ->where('d.etat = ?1')
            ->setParameter(1, 'EnTraitement')
            ->where('d.id_client = :id')
            ->setParameter('id',  $id )
            ->getQuery()
            ->getSingleScalarResult();

    }
    public function enTraitementLivreur($id){
        return $this->createQueryBuilder('d')
            ->select('COUNT(d)')
            ->where('d.etat = ?1')
            ->setParameter(1, 'EnTraitement')
            ->where('d.id_livreur = :id')
            ->setParameter('id',  $id )
            ->getQuery()
            ->getSingleScalarResult();


    }


    public function dixDernierDemande()
    {
        $query = $this->getEntityManager()
            ->createQuery("SELECT d  FROM DemandeBundle\Entity\Demande d  ORDER BY d.id DESC")
            ->setMaxResults(10)
        ;


        // returns an array of Product objects
        return $query->getResult();
    }

    public function dixDernierDemandeUser($id)
    {
        return $this->createQueryBuilder('a')
            ->select('a')
            ->where('a.id_client = :id')
            ->setParameter('id',  $id )

            ->getQuery();
    }



    public function getLivreurDemandes($id)
    {


        return $this->createQueryBuilder('d')
            ->where('d.id_livreur =  :id')
            ->andWhere('d.archive =  false')
            ->setParameter('id',  $id )
            ->orderBy('d.updated_date', 'DESC')
            ->getQuery()
            ->getResult();


    }







    public function filterByClients($id){
        return $this->createQueryBuilder('d')
            ->where('d.id_client =  :id')
            ->andWhere('d.archive =  false')
            ->setParameter('id',  $id )
            ->orderBy('d.updated_date', 'DESC')

            ->getQuery()
            ->getResult();
    }

    public function filterByClientsDate($date){
        return $this->createQueryBuilder('d')
            ->where("d.date_emission")
            ->where( "DATE_FORMAT(d.date_emission, '%Y-%m-%d') = :date" )
            ->andWhere('d.archive =  false')
            ->setParameter('date',  $date )
            ->orderBy('d.updated_date', 'DESC')
            ->getQuery()
            ->getResult();
    }



    public function filterGlobal($id,$date){
        return $this->createQueryBuilder('d')
            ->where('d.id_client =  :id')
            ->andWhere('d.archive =  false')
            ->andWhere( "DATE_FORMAT(d.date_emission, '%Y-%m-%d') = :date" )
            ->setParameter('date',  $date )
            ->setParameter('id',  $id )
            ->orderBy('d.updated_date', 'DESC')
            ->getQuery()
            ->getResult();
    }

    public function filterGlobalLivreur($id,$date){
        return $this->createQueryBuilder('d')
            ->where('d.id_livreur =  :id')
            ->andWhere('d.archive =  false')
            ->andWhere( "DATE_FORMAT(d.date_emission, '%Y-%m-%d') = :date" )
            ->setParameter('date',  $date )
            ->setParameter('id',  $id )
            ->orderBy('d.updated_date', 'DESC')
            ->getQuery()
            ->getResult();
    }

    public function filterGlobalLivreurAll($id){
        return $this->createQueryBuilder('d')
            ->where('d.id_livreur =  :id')
            ->andWhere('d.archive =  false')
            ->setParameter('id',  $id )
            ->orderBy('d.updated_date', 'DESC')
            ->getQuery()
            ->getResult();
    }













}
